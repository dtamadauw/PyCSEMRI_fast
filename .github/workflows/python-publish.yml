# .github/workflows/python-publish.yml

name: Build and Publish to PyPI

on:
  # This triggers the workflow when you click "Publish release" in the GitHub UI.
  release:
    types: [published]
  # This allows you to run the workflow manually from the Actions tab for testing.
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # This matrix builds on both Linux and macOS.
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU for ARM builds (Linux only)
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3

      - name: Build wheels with cibuildwheel
        uses: pypa/cibuildwheel@v2.19.1
        # No 'env' block is needed here. cibuildwheel will read all of its
        # configuration from your pyproject.toml file.

      - name: Store the produced wheels as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl

  publish_wheels:
    name: Publish wheels to PyPI
    needs: build_wheels
    runs-on: ubuntu-latest
    
    # This job only runs if the workflow was triggered by a release.
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - name: Download all wheels from build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: wheels-*
          merge-multiple: true

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          # This securely uses the API token you stored in GitHub secrets.
          password: ${{ secrets.PYPI_CSEMRI }}

