name: Build and Publish to PyPI

on:
  # This workflow runs when a new release is created.
  release:
    types: [published]
  # This allows you to run it manually from the Actions tab for testing.
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false # Don't cancel all jobs if one fails
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # (Optional) For building ARM64 wheels on Linux runners
      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3

      - name: Build wheels with cibuildwheel
        uses: pypa/cibuildwheel@v2.19.1
        env:
          # --- Final Attempt Configuration ---
          # 1. Be explicit about skipping old Python versions. This is the most important setting.
          CIBW_SKIP: "cp36-* cp37-* pp*"
          
          # 2. Add verbosity to see what cibuildwheel is doing internally.
          CIBW_BUILD_VERBOSITY: 1

          # 3. Explicitly request a modern image for Linux builds. This is a safeguard.
          CIBW_MANYLINUX_X86_64_IMAGE: "manylinux_2_28"
          CIBW_MANYLINUX_AARCH64_IMAGE: "manylinux_2_28"
          
          # 4. Install build dependencies.
          CIBW_BEFORE_BUILD: "pip install cmake"

      - name: Store the produced wheels as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl

  publish_wheels:
    name: Publish wheels to PyPI
    # This job only runs after all the build jobs are successful
    needs: build_wheels
    runs-on: ubuntu-latest
    
    # This step is only executed when a release is created, not on manual runs
    if: github.event_name == 'release' && github.event.action == 'created'

    steps:
      - name: Download all wheels from build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: wheels-*
          merge-multiple: true

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          # Use the API token you stored in GitHub secrets
          password: ${{ secrets.PYPI_API_TOKEN }}
