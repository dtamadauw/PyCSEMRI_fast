# pyproject.toml

# This section defines the build system.
# It tells pip to use 'scikit-build-core' to build your package.
# scikit-build-core knows how to run CMake.
[build-system]
requires = ["scikit-build-core", "cmake>=3.15", "numpy"]
build-backend = "scikit_build_core.build"

# This section contains the metadata for your package.
# This information will be displayed on PyPI.
[project]
name = "PyCSEMRI"
version = "0.1.0"
description = "A package for CSEMRI with C++ accelerated components."
readme = "README.md"  # You should create a README.md file
authors = [
    { name = "Daiki Tamada", email = "dtamada@wisc.edu" },
]
license = { text = "GPL" } # Or another license like "BSD-3-Clause", etc.
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

# List your Python dependencies here.
# These will be installed by pip along with your package.
dependencies = [
    "numpy",
    'scipy',
    'scikit-image'
    # Add other dependencies like "scipy", "matplotlib", etc.
]

# Optional: For URLs like documentation, source code, etc.
[project.urls]
Homepage = "https://github.com/dtamadauw/PyCSEMRI_fast"
"Bug Tracker" = "https://github.com/dtamadauw/PyCSEMRI_fast/issues"



# This is the configuration for scikit-build-core.
[tool.scikit-build]
# This tells the builder that your Python package's source code is located
# in the 'package/' directory.
wheel.packages = ["package"]

# By not including any package-data configuration, we default to letting
# the CMake install rules dictate what goes into the wheel, which is correct.
sdist.reproducible = false
